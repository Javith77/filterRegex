package com.ojmm.filter;

import com.ojmm.filter.util.Regex;
import java.awt.Toolkit;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.InputStream;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author over.meneses
 */
public class HomeWindow extends javax.swing.JFrame {
    private String fullContent;

    /**
     * Creates new form HomeWindow
     */
    public HomeWindow() {
        this.fullContent = "";
        
        initComponents();
        setLocationRelativeTo(null);
       // setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/main/java/com/ojmm/filter/images/icon.png")));

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtPathLocal = new javax.swing.JTextField();
        btnSelect = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        txtTerm = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        txtLogs = new java.awt.TextArea();
        jLabel2 = new javax.swing.JLabel();
        txtContent = new java.awt.TextArea();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Sistema de filtro");
        setBackground(new java.awt.Color(255, 255, 255));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setResizable(false);

        jLabel1.setText("Ruta local");

        txtPathLocal.setEditable(false);
        txtPathLocal.setBackground(new java.awt.Color(255, 255, 255));

        btnSelect.setText("Seleccionar");
        btnSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectActionPerformed(evt);
            }
        });

        txtTerm.setToolTipText("yyyy-dd o yyyy/dd");
        txtTerm.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        btnSearch.setText("Buscar");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        jLabel2.setText("Errores de estructura del archivo");

        txtContent.setBackground(new java.awt.Color(255, 255, 255));
        txtContent.setEditable(false);

        jLabel3.setText("Fecha (YYYY/DD o YYYY-DD):");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtContent, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(txtPathLocal, javax.swing.GroupLayout.DEFAULT_SIZE, 596, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnSelect))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtTerm, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnSearch))
                    .addComponent(jLabel3)
                    .addComponent(txtLogs, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSelect, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtPathLocal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTerm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch))
                .addGap(4, 4, 4)
                .addComponent(txtContent, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txtLogs, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        int response = fileChooser.showOpenDialog(null);

        if (response == JFileChooser.APPROVE_OPTION) {
            String path = fileChooser.getSelectedFile().getAbsolutePath();
            try {
                File file = new File(path);
                String ext = com.ojmm.filter.util.Files.getFileExtension(file.getName());
                if(ext.equalsIgnoreCase("txt")){
                    this.readFile(path);
                    this.txtPathLocal.setText(path);
                }else{
                    JOptionPane.showMessageDialog(null, "Extensión de archivo invalido, solo se admite archivos con extensión txt");
                }
            } catch (FileNotFoundException ex) {
                Logger.getLogger(HomeWindow.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnSelectActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        String term = this.txtTerm.getText().isBlank() ? null : this.txtTerm.getText();

        //validate date regex 
        if (term != null && !Regex.isDateYYYYMM(term)) {
            JOptionPane.showMessageDialog(null, "Formato de fecha invalida (YYYY-MM)(YYYY/MM) o fecha excedida (1900 - 2999)");
            return;
        }
        //validate content
        if (this.txtContent.getText().isBlank() && this.fullContent.isBlank()) {
            JOptionPane.showMessageDialog(null, "No hay datos, puebe cargando un archivo");
            return;
        }

        if (term != null) {
            this.filterData(term, this.fullContent);
        } else {
            this.txtContent.setText(this.fullContent);
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    /**
     * read uploaded file
     * 
     * @param path
     * @throws FileNotFoundException 
     */
    private void readFile(String path) throws FileNotFoundException {
        this.fullContent = "";
        this.txtTerm.setText(null);
        this.txtLogs.setText(null);
        InputStream ins = new FileInputStream(path);
        Scanner obj = new Scanner(ins);
        int i = 0;
        while (obj.hasNextLine()) {
            ++i;
            String content = obj.nextLine();
            //validate structure
            if (Regex.isAllowedtructure(content)) {
                this.fullContent += content.concat("\r\n");
            }else{
                String logs = String.format("Formato invalido en la línea %s texto (%s)\r\n", i, content.isBlank() ? "Vacío" : content);
                logs = txtLogs.getText().concat(logs);
                this.txtLogs.setText(logs);
            }
        }
        
        this.txtContent.setText(this.fullContent.isBlank() ? "No se encontraron registros..." : this.fullContent);
    }
    
    /**
     * filter original data
     * 
     * @param term
     * @param content 
     */
    private void filterData(String term, String content){
        String contentFiltered = Regex.filterData(term, content);
        this.txtContent.setText(contentFiltered.isBlank() ? "No se encontraron resultados..." : contentFiltered);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HomeWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HomeWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HomeWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HomeWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HomeWindow().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnSelect;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JSeparator jSeparator1;
    private java.awt.TextArea txtContent;
    private java.awt.TextArea txtLogs;
    private javax.swing.JTextField txtPathLocal;
    private javax.swing.JTextField txtTerm;
    // End of variables declaration//GEN-END:variables

}
